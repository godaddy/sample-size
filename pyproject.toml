[tool.poetry]
name = "sample-size"
version = "3.0.0"
description = "A python module implementing power analysis to estimate sample size"
authors = []
include = ["CHANGELOG.md", "README.md"]
readme = "README.md"
maintainers = ["GoDaddy <oss@godaddy.com>"]
keywords = ["sample size", "experimentation", "power analysis"]

[tool.poetry.dependencies]
python = ">=3.7.1,<3.11"
statsmodels = "^0.13.1"
jsonschema = "^4.5.1"

[tool.poetry.dev-dependencies]
flake8 = "^5.0"
coverage = "^6.3"
isort = "^5.6.3"
black = "^22.3.0"
mypy = "^0.982"
pytest = "^7.0.0"
pytest-sugar = "^0.9.4"
pytest-cov = "^4.0.0"
click = "8.1.3"
parameterized = "^0.8.1"

[tool.poetry.scripts]
qa = "poetry_scripts:qa"
test = "poetry_scripts:test"
format = "poetry_scripts:format_fix"
format-check = "poetry_scripts:format_check"
lint = "poetry_scripts:lint"
type-check = "poetry_scripts:type_check"
run-sample-size = "sample_size.scripts.sample_size_run:main"

[tool.isort]
ensure_newline_before_comments = true
line_length = 120
force_single_line = true

[tool.black]
line-length = 120

[tool.mypy]
ignore_missing_imports = true
show_error_codes = true
pretty = true
# Flags set by mypy --strict
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
# Disable checking that's annoying for tests
disallow_untyped_defs = false
disallow_untyped_calls = false

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov --cov-report term --cov-report term-missing --cov-report xml:coverage/coverage.xml --cov-fail-under 100 --durations=0"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["sample_size"]

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover", # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug", # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError", # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:", # Don't complain about mypy-specific code
    "if TYPE_CHECKING:",
]
ignore_errors = true

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry_core>=1.0.0"]
