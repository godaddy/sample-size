name: CI

on:
  pull_request: {}
  push:
    branches: [main]

jobs:
  tests:
    name: Format and Tests
    runs-on: "${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
        include:
          - os: ubuntu-latest
          - os: windows-latest
          - os: macos-latest
    env:
      PYTHON: ${{ matrix.python-version }}
      OS: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get full Python version
        id: full-python-version
        shell: bash
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Install poetry
        run:  |
          pip install --upgrade pip
          pip install --upgrade poetry

      - name: Install dependencies
        shell: bash
        run: poetry install

      - name: Format check
        shell: bash
        run: poetry run format-check

      - name: Lint
        shell: bash
        run: poetry run lint

      - name: Type Check
        shell: bash
        run: poetry run type-check
      
      - name: Unit test
        shell: bash
        run: poetry run test
